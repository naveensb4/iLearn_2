rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection Rules
    match /Users/{userId} {
      // Allow authenticated users to read any user's profile
      allow read: if request.auth != null;

      // Allow users to create their own profile document or update it
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Clubs Collection Rules
    match /Clubs/{clubId} {
      // Allow authenticated users to read club information
      allow read: if request.auth != null;
      
      // Allow specific users (defined by UID) to add new clubs
      allow create: if request.auth != null && request.auth.uid in ['kunTHEg6lWhW50YHyG7mS9x6yfK2']; // Add your specific UIDs here


      // Allow authenticated users to add their UID to joinRequests array
      allow update: if request.auth != null 
                    && request.resource.data.joinRequests.size() == resource.data.joinRequests.size() + 1 // Ensure joinRequests increases by 1
                    && request.resource.data.joinRequests.hasAll(resource.data.joinRequests) // Ensure no existing requests are overwritten
                    && request.auth.uid in request.resource.data.joinRequests; // Ensure the user's UID is included in the new array

      // Allow admins to update club details, such as managing members
      allow write: if request.auth != null && request.auth.uid in resource.data.adminIds;
    }

    // CoffeeChats Collection Rules
    match /CoffeeChats/{chatId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.requesterId || request.auth.uid == resource.data.hostId);
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.requesterId || request.auth.uid == resource.data.hostId);
    }
  }
}
